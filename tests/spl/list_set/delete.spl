include "../include/slsset.spl";

options "-stratify"

procedure delete(lst: Node, val: Int, implicit ghost C: Set<Int>)
  returns (res: Node)
  requires list_set(lst, null, C)
  ensures list_set(res, null, C -- {val})
{
  var curr: Node, prev: Node;
  curr := lst;
  prev := null;
  
  while (curr != null && curr.data < val)
    invariant (prev == null && curr == lst || val > prev.data &*& prev.next |-> curr) -** 
        list_set(lst, null, C)
  {
    prev := curr;
    curr := curr.next; 
  }
  
  if (curr != null && curr.data == val) {
    var n: Node;
    n := curr;
    curr := curr.next;
    free n;
    if (prev != null) {
      prev.next := curr;
      return lst;
    } else {
      return curr;
    }
  } else {
    return lst;
  }
}
