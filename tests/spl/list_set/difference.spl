include "../include/slsset.spl";

options "-stratify"

procedure difference(lst1: Node, lst2: Node,
                implicit ghost C1: Set<Int>, implicit ghost C2: Set<Int>)
  returns (res: Node)
  requires list_set(lst1, null, C1) &*& list_set(lst2, null, C2);
  ensures list_set(lst2, null, C2) &*& list_set(res, null, C1 -- C2);
{
    if (lst1 == null) {
        return lst1;
    } else if (lst2 == null) {
        return lst1;
    } else if (lst1.data < lst2.data) {
        lst1.next := difference(lst1.next, lst2);
        return lst1;
    } else if (lst1.data > lst2.data) {
        return difference(lst1, lst2.next);
    } else { //lst1.data == lst2.data
        var n: Node;
        n := lst1.next;
        free lst1 ;
        return difference(n, lst2.next);
    }
}
