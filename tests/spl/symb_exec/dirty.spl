struct Node {
  var next: Node;
}


procedure lemma_clean(x: Node)
  requires [x.next |-> null](x)
  ensures x.next |-> null

procedure test1(x: Node, y: Node)
  requires [x.next |-> null](x) &*& acc(y)
  ensures acc(x) &*& acc(y)
{
  lemma_clean(x);
}

procedure write_dirty(x: Node, y: Node, z: Node)
  requires [x.next |-> null &*& acc(z)](x) &*& y.next |-> x
  ensures [x.next |-> x &*& acc(z)](x) &*& y.next |-> x
{
  x.next := x;
}

procedure write_dirty2(x: Node, y: Node, z: Node)
  requires [[x.next |-> null](x) &*& acc(z)](x) &*& y.next |-> x
  ensures [[x.next |-> x](x) &*& acc(z)](x) &*& y.next |-> x
{
  x.next := x;
}
