tests/spl/include/ordered_type.spl
--- Beginning of file ---
Prog:  7  Spec:  11  Total:  18

tests/spl/reloc/array_util.spl
--- Beginning of file ---
Prog:  108  Spec:  73  Total:  181
/** Programs */
Prog:  127  Spec:  113  Total:  240

tests/spl/reloc/b+-tree-split.spl
--- Beginning of file ---
Prog:  1  Spec:  0  Total:  1
/** These extra lemmas need to go into ReLoC
Prog:  43  Spec:  117  Total:  160
/** split */
Prog:  33  Spec:  49  Total:  82

tests/spl/reloc/b+-tree.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** B+ tree implementation of the give-up template for linearizable dictionaries. */
Prog:  3  Spec:  0  Total:  3
/** Flow and node domain definitions */
Prog:  25  Spec:  12  Total:  37
/** Definition of a node */
Prog:  8  Spec:  5  Total:  13
/** Definition of heap representation, hrep */
Prog:  19  Spec:  36  Total:  55
/** Lemmas needed by Coq */
Prog:  8  Spec:  26  Total:  34
/** Begin programs */
Prog:  0  Spec:  0  Total:  0
/** Initialize root node */
Prog:  13  Spec:  3  Total:  16
/** inRange */
Prog:  4  Spec:  3  Total:  7
/** findNext */
Prog:  11  Spec:  6  Total:  17
/** member */
Prog:  8  Spec:  5  Total:  13
/** insert */
Prog:  14  Spec:  8  Total:  22
/** delete */
Prog:  10  Spec:  8  Total:  18

tests/spl/reloc/b-link-half-split.spl
--- Beginning of file ---
Prog:  90  Spec:  184  Total:  274

tests/spl/reloc/b-link-old.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** B+ tree implementation of the link template for linearizable dictionaries. */
Prog:  3  Spec:  0  Total:  3
/** Flow and node domain definitions */
Prog:  19  Spec:  15  Total:  34
/** Definition of a node */
Prog:  7  Spec:  8  Total:  15
/** Definition of heap representation, hrep */
Prog:  20  Spec:  65  Total:  85
/** Begin programs */
Prog:  0  Spec:  0  Total:  0
/** Initialize root note */
Prog:  16  Spec:  3  Total:  19
/** findNext */
Prog:  24  Spec:  11  Total:  35
/** member */
Prog:  8  Spec:  5  Total:  13
/** insert */
Prog:  21  Spec:  9  Total:  30
/** delete */
Prog:  12  Spec:  9  Total:  21

tests/spl/reloc/b-link.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** B+ tree implementation of the link template for linearizable dictionaries. */
Prog:  3  Spec:  0  Total:  3
/** Flow and node domain definitions */
Prog:  29  Spec:  18  Total:  47
/** Definition of a node */
Prog:  7  Spec:  8  Total:  15
/** Definition of heap representation, hrep */
Prog:  121  Spec:  134  Total:  255
/** Lemmas needed by Coq */
Prog:  20  Spec:  63  Total:  83
/** Begin programs */
Prog:  0  Spec:  0  Total:  0
/** Initialize root note */
Prog:  13  Spec:  1  Total:  14
/** findNext */
Prog:  24  Spec:  12  Total:  36
/** member */
Prog:  8  Spec:  5  Total:  13
/** insert */
Prog:  23  Spec:  9  Total:  32
/** delete */
Prog:  12  Spec:  9  Total:  21

tests/spl/reloc/flows-relational.spl
--- Beginning of file ---
Prog:  8  Spec:  3  Total:  11
/** Gamma is hardcoded into these two lemmas */
Prog:  3  Spec:  6  Total:  9
/** Lemmas */
Prog:  38  Spec:  102  Total:  140

tests/spl/reloc/flows.spl
--- Beginning of file ---
Prog:  40  Spec:  104  Total:  144

tests/spl/reloc/give-up-header.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Header for give-up technique template for linearizable dictionaries. */
Prog:  5  Spec:  1  Total:  6
/** Node domain definitions */
Prog:  3  Spec:  3  Total:  6
/** Definition of good condition, gamma, and global invariant */
Prog:  3  Spec:  12  Total:  15
/** Actions */
Prog:  8  Spec:  21  Total:  29

tests/spl/reloc/give-up.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Give-up technique template for linearizable dictionaries. */
Prog:  8  Spec:  14  Total:  22
/** Begin programs */
Prog:  40  Spec:  57  Total:  97
/** Intermediate assertions */
Prog:  8  Spec:  16  Total:  24
/** Stability proofs */
Prog:  144  Spec:  88  Total:  232
/** Meta stability proof */
Prog:  29  Spec:  47  Total:  76

tests/spl/reloc/harris-1.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** No-data, single list, sequential version of Harris' list. */
Prog:  2  Spec:  0  Total:  2
/** Flow domain definitions */
Prog:  9  Spec:  9  Total:  18
/** Definition of good condition, gamma */
Prog:  2  Spec:  12  Total:  14
/** Begin programs */
Prog:  26  Spec:  50  Total:  76

tests/spl/reloc/harris-2.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** No-data, sequential version of Harris' list (with free list). */
Prog:  2  Spec:  0  Total:  2
/** Flow domain definitions */
Prog:  11  Spec:  11  Total:  22
/** Definition of good condition, gamma */
Prog:  3  Spec:  27  Total:  30
/** Begin programs */
Prog:  81  Spec:  94  Total:  175

tests/spl/reloc/hashtbl-give-up.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Hash table implementation of the give-up template for linearizable dictionaries. */
Prog:  3  Spec:  0  Total:  3
/** Flow domain definitions */
Prog:  20  Spec:  9  Total:  29
/** Definition of a node */
Prog:  10  Spec:  7  Total:  17
/** Definition of heap representation, hrep */
Prog:  8  Spec:  30  Total:  38
/** Lemmas needed by Coq */
Prog:  8  Spec:  26  Total:  34
/** Begin programs */
Prog:  0  Spec:  0  Total:  0
/** inRange */
Prog:  4  Spec:  3  Total:  7
/** findNext **/
Prog:  13  Spec:  6  Total:  19
/** member */
Prog:  8  Spec:  5  Total:  13
/** insert */
Prog:  14  Spec:  8  Total:  22
/** delete */
Prog:  10  Spec:  8  Total:  18

tests/spl/reloc/hashtbl.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Hash table implementation of the link template for linearizable dictionaries. */
Prog:  3  Spec:  0  Total:  3
/** Flow domain definitions */
Prog:  19  Spec:  14  Total:  33
/** Definition of a node */
Prog:  8  Spec:  6  Total:  14
/** Definition of good condition, gamma */
Prog:  8  Spec:  34  Total:  42
/** Lemmas needed by Coq */
Prog:  14  Spec:  51  Total:  65
/** Begin programs */
Prog:  0  Spec:  0  Total:  0
/** findNext **/
Prog:  13  Spec:  6  Total:  19
/** member */
Prog:  8  Spec:  5  Total:  13
/** insert */
Prog:  14  Spec:  8  Total:  22
/** delete */
Prog:  10  Spec:  8  Total:  18

tests/spl/reloc/link.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Link technique template for linearizable dictionaries. */
Prog:  3  Spec:  4  Total:  7
/** Flow domain definitions */
Prog:  9  Spec:  14  Total:  23
/** Begin programs */
Prog:  30  Spec:  56  Total:  86
/** Intermediate assertions */
Prog:  14  Spec:  23  Total:  37

tests/spl/reloc/list-coupling.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Linked list implementation of the lock coupling template for linearizable dictionaries. */
Prog:  3  Spec:  0  Total:  3
/** Flow and node domain definitions */
Prog:  9  Spec:  12  Total:  21
/** Definition of a node */
Prog:  5  Spec:  2  Total:  7
/** Definition of heap representation, hrep */
Prog:  14  Spec:  15  Total:  29
/** Begin programs */
Prog:  5  Spec:  2  Total:  7
/** findNext */
Prog:  13  Spec:  5  Total:  18
/** member */
Prog:  8  Spec:  5  Total:  13
/** insert */
Prog:  43  Spec:  139  Total:  182

tests/spl/reloc/sl.spl
--- Beginning of file ---
Prog:  9  Spec:  4  Total:  13
/** Gamma is hardcoded into these two lemmas */
Prog:  3  Spec:  15  Total:  18
/** Lemmas */
Prog:  25  Spec:  68  Total:  93

tests/spl/reloc/sls.spl
--- Beginning of file ---
Prog:  1  Spec:  0  Total:  1
/** Flow domain definitions */
Prog:  10  Spec:  9  Total:  19
/** Definition of good condition, gamma */
Prog:  1  Spec:  5  Total:  6
/** Lemmas */
Prog:  6  Spec:  4  Total:  10

tests/spl/reloc/test_soundness1.spl
--- Beginning of file ---
Prog:  1  Spec:  0  Total:  1
/** Flow domain definitions */
Prog:  10  Spec:  6  Total:  16

tests/spl/reloc/tests.spl
--- Beginning of file ---
Prog:  1  Spec:  0  Total:  1
/** Flow domain definitions */
Prog:  21  Spec:  18  Total:  39

tests/spl/reloc/threaded-tree.spl
--- Beginning of file ---
Prog:  0  Spec:  0  Total:  0
/** Threaded tree delete/pop from Ramifications paper. */
Prog:  1  Spec:  0  Total:  1
/** Flow domain definitions */
Prog:  9  Spec:  7  Total:  16
/** Definition of good condition, gamma */
Prog:  3  Spec:  36  Total:  39
/** Program */
Prog:  10  Spec:  17  Total:  27

